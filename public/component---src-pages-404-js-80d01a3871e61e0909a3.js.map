{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/pages/404.js"],"names":["SEO","description","lang","meta","title","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","query","NotFoundPage","data","style","height","backgroundPosition","fluid","sanityCompanyInfo","emptypage","asset","className","backgroundColor","primarycolor","hex","opacity","id","to","accentcolor"],"mappings":"iKAYA,SAASA,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC9BC,EADuC,OACvCA,KAcFC,EAAkBL,GAAeI,EAAKE,aAAaN,YAEzD,OACE,kBAAC,IAAD,CACEO,eAAgB,CACdN,QAEFE,MAAOA,EACPK,cAAa,QAAUJ,EAAKE,aAAaH,MACzCD,KAAM,CACJ,CACEO,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASP,GAEX,CACEQ,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASN,EAAKE,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASP,GAEX,CACEM,KAAK,sBACLC,QAASL,IAEXQ,OAAOX,KAKfH,EAAIe,aAAe,CACjBb,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD,Q,2BCvFf,oCAOO,IAAMgB,EAAK,YAkDHC,UAxBM,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OACnB,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAKd,MAAM,mBACX,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEe,MAAO,CACLC,OAAQ,OACRC,mBAAoB,UAEtBC,MAAOJ,EAAKK,kBAAkBC,UAAUC,MAAMH,OAC5C,yBAAKI,UAAU,kBAAkBP,MAAO,CAClCQ,gBAAiBT,EAAKK,kBAAkBK,aAAaC,IACrDC,QAAS,SAEnB,6BAASC,GAAG,gBACV,yBAAKL,UAAU,sBACb,0DACA,kBAAC,IAAD,CAAMM,GAAG,IAAIb,MAAO,CAACQ,gBAAiBT,EAAKK,kBAAkBU,YAAYJ,MAAzE,sB","file":"component---src-pages-404-js-80d01a3871e61e0909a3.js","sourcesContent":["/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import React from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport BackgroundImage from 'gatsby-background-image'\r\nimport Form from \"../components/form\"\r\n\r\nexport const query = graphql`\r\n    query errorQuery{\r\n        sanityCompanyInfo {\r\n            companyname\r\n            emptypage{\r\n              asset{\r\n                fluid(maxWidth: 1920){\r\n                  ...GatsbySanityImageFluid\r\n                }\r\n              }\r\n            }\r\n            primarycolor{\r\n                hex\r\n            }\r\n            secondarycolor{\r\n                hex\r\n            }\r\n            accentcolor{\r\n                hex\r\n            }\r\n        }\r\n    }\r\n\r\n`\r\n\r\n\r\nconst NotFoundPage = ({data}) => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <Form />\r\n    <BackgroundImage\r\n      style={{\r\n        height: \"100%\",\r\n        backgroundPosition: \"center\"\r\n      }}\r\n      fluid={data.sanityCompanyInfo.emptypage.asset.fluid}>\r\n        <div className=\"pageNotFound-bg\" style={{\r\n              backgroundColor: data.sanityCompanyInfo.primarycolor.hex,\r\n              opacity: \"0.6\"\r\n          }}></div>\r\n    <section id=\"pageNotFound\">\r\n      <div className=\"pageNotFound-inner\">\r\n        <h1>We could not find that one</h1>\r\n        <Link to=\"/\" style={{backgroundColor: data.sanityCompanyInfo.accentcolor.hex}}>Go back home</Link>\r\n      </div>\r\n    </section>\r\n    </BackgroundImage>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n"],"sourceRoot":""}